- headers = @conversation.details['report_headers'] ||[ @conversation.title ]
- headers.each do |header|
  %h3.delib-title= header

- @conversation.details['comment_types'].each do |type|
  .type-section
    %h3.comment-type-title= type
    - theme = @conversation.theme_comments.detect{|t| t.purpose == type && t.status == 'auto-tag-theme'}
    - child_comment_ids = theme.try{|theme| theme.child_targets.map(&:child_id).uniq} || []
    -#%p theme_id: #{theme.id} has type: #{type} has ids: #{child_comment_ids}
    - if child_comment_ids.size > 0
      %ol
        - child_comment_ids.each do |com_id|
          - comment = @conversation.table_comments.detect{|c| c.id == com_id }
          - if comment && comment.elements.nil?
            %li= render :partial => 'reports/comment_simple', :locals => {comment: comment}
          - elsif comment
            %li= render :partial => 'reports/comment_elements', :locals => {comment: comment}
    - else
      %p No suggestions

- if @additional_suggestions
  .additional-suggestions
    %h3.comment-type-title Additional Suggestions
    - theme = @additional_suggestions.theme_comments.detect{|t| t.status == 'auto-tag-theme'}
    - child_comment_ids = theme.try{|theme| theme.child_targets.map(&:child_id).uniq} || []
    -#%p theme_id: #{theme.id} has type: #{type} has ids: #{child_comment_ids}
    - if child_comment_ids.size > 0
      %ol
        - child_comment_ids.each do |com_id|
          - comment = @additional_suggestions.table_comments.detect{|c| c.id == com_id }
          - if comment && comment.elements.nil?
            %li= render :partial => 'reports/comment_simple', :locals => {comment: comment}
          - elsif comment
            %li= render :partial => 'reports/comment_elements', :locals => {comment: comment}
    - else
      %p No additional suggestions

